{% set messages = data["Messages"] -%}
{% set boards = data["Boards"] -%}

import struct
import subprocess

# Board and Message ids
{% for board in boards -%}
SYSTEM_CAN_DEVICE_{{ board | upper }} = {{ loop.index0 }}
{% endfor %}

{% for message in messages -%}
SYSTEM_CAN_MESSAGE_{{ message.sender | upper }}_{{ message.message_name | upper }} = {{ message.id }},
{% endfor %}

# Send
def send_message(id, data):
  cmd = f"cansend can0 {id:x}#{data:x}"
  subprocess.run(cmd)

def pack(num, size):
  if isinstance(num, float) and (size == 32):
    return struct.pack("f", num).hex()
  elif (size == 32):
    return struct.pack("i", num).hex()
  elif (size == 16):
    return struct.pack("h", num).hex()
  elif (size == 8):
    return struct.pack("b", num).hex()

{%- for message in messages %}
def send_message_{{message.sender}}_{{message.message_name}}(
{%- for signal_data in message['signals'] -%}
  {{signal_data['signal_name']}}{{ ', ' if not loop.last }}
{%- endfor -%}
):
    send_message({{ message.id }},
    {%- for signal_data in message.signals -%}
        pack({{ signal_data.signal_name }}, {{ signal_data.length }}){{ '+' if not loop.last }}
    {%- endfor -%})
{% endfor %}








