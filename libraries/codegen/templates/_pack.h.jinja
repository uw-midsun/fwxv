#pragma once

#include "can_msg_defs.h" 
#include "can_pack_impl.h" 

{%- set messages = data["Messages"] -%}

{%- for message in messages -%}
    {%- set signal = data['Messages'][message]['signals'].keys() | list -%}
    {%- set signal_length = data["Messages"][message]['signals'][signal[0]].values() | list %}

{% set function_parameters -%}
void can_pack_{{message}}(CanMessage *msg_ptr{%- for key in signal-%}, uint{{signal_length[0]}}_t {{key}}_u{{signal_length[0]}}{%- endfor-%}){ 
{%- endset -%}

{%- set function_body -%}
can_pack_impl_u{{signal_length[0]}}((msg_ptr), SYSTEM_CAN_DEVICE_BMS_CARRIER, SYSTEM_CAN_MESSAGE_{{message|upper}}, {{data['Messages'][message]['id']}},
    {%- for key in signal-%}{%-if loop.first %} ({{key}}_u{{signal_length[0]}}){%- else -%}, ({{key}}_u{{signal_length[0]}}){%- endif -%}{%- endfor-%}
    {%- for i in range((64 / signal_length[0] - data['Messages'][message]['signals']|length)| int )-%}, CAN_PACK_IMPL_EMPTY{%- endfor -%}); 
{%- endset -%}

{{function_parameters | format_function_parameters}}
{{function_body | format_function_body}}
}
{%- endfor %}