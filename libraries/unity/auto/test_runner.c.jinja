/* AUTOGENERATED FILE. DO NOT EDIT. */
/*=======Automagically Detected Files To Include=====*/
{% if data.has_in_task_test -%}
#include "FreeRTOS.h"
#include "tasks.h"
{% endif -%}
#include "unity.h"
#include <stdlib.h>

/*=======External Functions This Runner Calls=====*/
extern void setup_test(void);
{%- for test in data.tests %}
extern void {{test.name}}(void);
{%- endfor %}

/*=======Test Runner Used To Run Each Test=====*/
static void run_test(UnityTestFunction func, const char *name, UNITY_LINE_TYPE line_num) {
  Unity.CurrentTestName = name;
  Unity.CurrentTestLineNumber = line_num;

  Unity.NumberOfTests++;
  UNITY_CLR_DETAILS();

  if (TEST_PROTECT()) {
{%- if data.has_in_task_test %}
    vTaskSuspendAll();
    setup_test();
    xTaskResumeAll();
{% else %}
    setup_test();
{%- endif %}
    func();
  }

  UnityConcludeTest();
}

/*=======PRE TASK TESTS=====*/
void test_pre_task(void) {
{%- for test in data.tests | selectattr("type", "eq", "TEST_PRE_TASK") %}
  run_test({{test.name}}, "{{test.name}}", {{test.line}});
{%- endfor %}
}

{% if data.has_in_task_test -%}
/*=======IN TASK TESTS=====*/
TASK(test_task, TASK_STACK_1024) {
  UnityBegin("{{data.filename}}");

  {% for test in data.tests | selectattr("type", "eq", "TEST_IN_TASK") %}
  run_test({{test.name}}, "{{test.name}}", {{test.line}});
  {% endfor %}

  exit(UnityEnd());
}
{% endif -%}

/*=======MAIN=====*/
int main() {
  setup_test();
  test_pre_task();
{%- if data.has_in_task_test %}
  tasks_init();
  tasks_init_task(test_task, configMAX_PRIORITIES - 1, NULL);
  tasks_start(); 
{%- endif %}
  return 0;
}
